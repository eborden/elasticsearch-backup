#!/usr/bin/env node

'use strict';

var prom = require('../build/src/promiscuous-config.js'),
    _ = require('lodash'),
    argParse = require('argparse'),
    ArgumentParser = argParse.ArgumentParser,
    parser = new ArgumentParser({
        version: '0.0.0',
        addHelp: true,
        description: 'ElasticSearch backup'
    }),
    commandParse = parser.addSubparsers({
        title: 'commands',
        dest: 'command'
    }),
    pack = commandParse.addParser('pack', {addHelp: true}),
    unpack = commandParse.addParser('unpack', {addHelp: true}),
    options;

//Global Options
parser.addArgument(['--host'], {help: 'Host location of ElastSearch instance.'});
parser.addArgument(['--port'], {help: 'The ElasticSearch is listening on.'});
parser.addArgument(['--filePath'], {help: 'Target directory for backup files'});

//Pack Options
pack.addArgument(['--index'], {help: 'The index to be archived.'});
pack.addArgument(['--type'], {help: 'The type to be archived.'});
pack.addArgument(['--no-compress'], {help: 'Do not compress the resulting file.', action: 'storeConst', constant: true});

//Unpack Options
unpack.addArgument(['--name'], {help: 'Which ES backup to pull from, defaults to latest'});

//Remove empty options to retain defaults
options = _.reduce(parser.parseArgs(), function (o, val, key) {
    if (val) {
        o[key] = val;
    }
    return o;
}, {});

switch (options.command) {
    case 'pack':
        return require('../build/src/pack.js')(options);
    case 'unpack':
        return require('../build/src/unpack.js')(options);
}
